syntax = "proto3";

option csharp_namespace = "Crypto";

package wallet;

message Owner {
	string id = 1;
	string name = 2;
}

message CryptoType {
	string id = 1;
	string name = 2;
	string currencyValue = 3;
	string amount = 4;
}

message WalletRequest {
	string id = 1;
	Owner owner = 2;
	double balance = 3;
	repeated CryptoType cryptos = 4;
}

message WalletResponse {
	string id = 1;
	Owner owner = 2;
	double balance = 3;
	repeated CryptoType cryptos = 4;
}

message GetWalletRequest {
	string id = 1;
}

message GetWalletResponse {
	WalletResponse wallet = 1;
}

message CreateWalletRequest {
	WalletRequest wallet = 1;
}

message CreateWalletResponse {
	WalletResponse wallet = 1;
}

message AvailableCryptoType {
    string id = 1;
    string name = 2;
    string currencyValue = 3;
}

message ListAvailableCryptoTypesRequest {
}

message ListAvailableCryptoTypesResponse {
    repeated AvailableCryptoType cryptoTypes = 1;
}

message UpdateCryptoRequest {
	string walletId = 1;
	repeated CryptoType cryptosToAdd = 2;
	repeated string cryptoIdsToRemove = 3;
}

message UpdateCryptoResponse {
	WalletResponse wallet = 1;
}

message TransferCryptoRequest {
	string fromWalletId = 1;
	string toWalletId = 2;
	string cryptoId = 3;
	string amount = 4;
}

message TransferCryptoResponse {
	WalletResponse fromWallet = 1;
	WalletResponse toWallet = 2;
}

message DeleteWalletRequest {
	string walletId = 1;
}

message DeleteWalletResponse {
	bool success = 1;
}

service Wallet {
	rpc GetWallet(GetWalletRequest) returns (GetWalletResponse);
	rpc CreateWallet(CreateWalletRequest) returns (CreateWalletResponse);
	rpc ListAvailableCryptoTypes(ListAvailableCryptoTypesRequest) returns (ListAvailableCryptoTypesResponse);
	rpc UpdateCrypto(UpdateCryptoRequest) returns (UpdateCryptoResponse);
	rpc TransferCrypto(TransferCryptoRequest) returns (TransferCryptoResponse);
	rpc DeleteWallet(DeleteWalletRequest) returns (DeleteWalletResponse);
}