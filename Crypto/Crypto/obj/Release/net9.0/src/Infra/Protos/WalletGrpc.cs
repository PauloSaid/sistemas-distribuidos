// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: src/Infra/Protos/wallet.proto
// </auto-generated>
#pragma warning disable 0414, 1591, 8981, 0612
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Crypto {
  public static partial class Wallet
  {
    static readonly string __ServiceName = "wallet.Wallet";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Crypto.GetWalletRequest> __Marshaller_wallet_GetWalletRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Crypto.GetWalletRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Crypto.GetWalletResponse> __Marshaller_wallet_GetWalletResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Crypto.GetWalletResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Crypto.CreateWalletRequest> __Marshaller_wallet_CreateWalletRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Crypto.CreateWalletRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Crypto.CreateWalletResponse> __Marshaller_wallet_CreateWalletResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Crypto.CreateWalletResponse.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Crypto.GetWalletRequest, global::Crypto.GetWalletResponse> __Method_GetWallet = new grpc::Method<global::Crypto.GetWalletRequest, global::Crypto.GetWalletResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetWallet",
        __Marshaller_wallet_GetWalletRequest,
        __Marshaller_wallet_GetWalletResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Crypto.CreateWalletRequest, global::Crypto.CreateWalletResponse> __Method_CreateWallet = new grpc::Method<global::Crypto.CreateWalletRequest, global::Crypto.CreateWalletResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateWallet",
        __Marshaller_wallet_CreateWalletRequest,
        __Marshaller_wallet_CreateWalletResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Crypto.WalletReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of Wallet</summary>
    [grpc::BindServiceMethod(typeof(Wallet), "BindService")]
    public abstract partial class WalletBase
    {
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Crypto.GetWalletResponse> GetWallet(global::Crypto.GetWalletRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Crypto.CreateWalletResponse> CreateWallet(global::Crypto.CreateWalletRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(WalletBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_GetWallet, serviceImpl.GetWallet)
          .AddMethod(__Method_CreateWallet, serviceImpl.CreateWallet).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, WalletBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_GetWallet, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Crypto.GetWalletRequest, global::Crypto.GetWalletResponse>(serviceImpl.GetWallet));
      serviceBinder.AddMethod(__Method_CreateWallet, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Crypto.CreateWalletRequest, global::Crypto.CreateWalletResponse>(serviceImpl.CreateWallet));
    }

  }
}
#endregion
